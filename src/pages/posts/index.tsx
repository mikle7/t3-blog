import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { trpc } from '../../utils/trpc'

import dancecat from '../../../public/dancecat.gif'
import zoomies from '../../../public/zoomies.gif'
import Link from 'next/link'
import { Post } from '@prisma/client'
import { Button, Card, Navbar } from 'flowbite-react'
import { date } from 'zod'
const Posts: NextPage = () => {
  // const { data, isLoading } = trpc.useQuery([
  //   'example.hello',
  //   { text: ' Michael' },
  // ])

  const { data, isLoading } = trpc.useQuery(['posts.getAllPosts'])

  if (isLoading) {
    return <div>Loading...</div>
  }

  return (
    <>
      <Head>
        <title>De.Bug Tech Blog</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <!-- Navbar --> */}
      {/* <nav className="relative w-screen h-40 bg-primary_blue">
        <div className="flex items-center justify-between w-screen h-20 px-8">
          <div className="text-2xl font-semibold text-center text-white">
            De.bug Blog
          </div>
          <div className="text-2xl font-semibold text-center text-white">
            Menu
          </div>
        </div>
      </nav> */}

      <Navbar fluid={true} rounded={true}>
        <Navbar.Brand>
          <img
            src="https://flowbite.com/docs/images/logo.svg"
            className="h-6 mr-3 sm:h-9"
            alt="Logo"
          />
          <span className="self-center text-xl font-semibold whitespace-nowrap dark:text-white">
            De.bug Blog
          </span>
        </Navbar.Brand>
        <Navbar.Toggle />
        <Navbar.Collapse>
          <Navbar.Link href="/" active={true}>
            Home
          </Navbar.Link>
          <Navbar.Link href="/">About</Navbar.Link>
          <Navbar.Link href="/">Posts</Navbar.Link>
        </Navbar.Collapse>
      </Navbar>
      <Navbar />
      {/* <div className="absolute flex items-center justify-center w-screen overflow-visible top-16">
        <div className="w-auto h-auto">
          <Image objectFit="contain" src={zoomies} alt={'dancecat'} priority />
        </div>
      </div> */}

      <div className="flex flex-col items-center w-screen h-screen bg-gray-100 grow">
        <div className="relative w-32 h-32 mx-8 my-2 overflow-hidden rounded-full ring-2">
          <Image
            objectFit="cover"
            src={dancecat}
            alt={'dancecat'}
            layout={'fill'}
            priority
          />
        </div>
        <div className="mx-8">
          <h3 className="font-extrabold text-1xl text-primary_blue">
            Post List
          </h3>
        </div>
        <div className="flex flex-col items-center ">
          {data?.map((post: Post) => (
            <>
              <PostCard post={post} />
              <TestCard post={post} />
            </>
          ))}
        </div>
        <ul>
          {data?.map((post: Post) => (
            <BlogList post={post} />
          ))}
        </ul>
        <div className=""></div>
        <div>
          <Card>
            <h5 className="text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
              Noteworthy technology acquisitions 2021
            </h5>
            <p className="font-normal text-gray-700 dark:text-gray-400">
              Here are the biggest enterprise technology acquisitions of 2021 so
              far, in reverse chronological order.
            </p>
            <Button>
              Read more
              <svg
                className="w-4 h-4 ml-2 -mr-1"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fillRule="evenodd"
                  d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                  clipRule="evenodd"
                />
              </svg>
            </Button>
          </Card>
        </div>
      </div>
    </>
  )
}

const PostCard = ({ post }: { post: Post }) => {
  return (
    <div className="my-4">
      <Card
        imgAlt="Meaningful alt text for an image that is not purely decorative"
        imgSrc="https://flowbite.com/docs/images/blog/image-1.jpg"
        horizontal
      >
        <h5 className="text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
          {post.title}
        </h5>
        <p className="font-normal text-gray-700 dark:text-gray-400">
          {post.content}
        </p>
        <div className="flex justify-end">
          <Button>View Post</Button>
        </div>
      </Card>
    </div>
  )
}

const TestCard = ({ post }: { post: Post }) => {
  const imgSrc = 'https://flowbite.com/docs/images/blog/image-1.jpg'

  return (
    <article className="w-3/4 p-8 bg-white border rounded-lg shadow-md">
      <h5 className="text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
        {post.title}
      </h5>
      <p className="font-normal text-gray-700 break-words dark:text-gray-400">
        {post.content}
      </p>
      <p>{post.id}</p>
      <div className="flex justify-end ">
        <button className="px-4 py-2 text-white bg-blue-700 rounded-md hover:bg-blue-900">
          <Link href={`/posts/${post.id}`}>View Post</Link>
        </button>
      </div>
    </article>
  )
}

const BlogList = ({ post }: { post: Post }) => {
  const { title, content } = post

  return (
    <li key={'slug'} className="py-4">
      <article className="space-y-2 bg-white rounded-lg shadow-lg xl:grid xl:grid-cols-4 xl:items-baseline xl:space-y-0">
        <dl>
          <dt className="sr-only">Published on</dt>
          <dd className="text-base font-medium leading-6 text-gray-500 dark:text-gray-400">
            <time dateTime={Date.now().toString()}>{Date.now()}</time>
          </dd>
        </dl>
        <div className="space-y-3 xl:col-span-3">
          <div>
            <h3 className="text-2xl font-bold leading-8 tracking-tight">
              <Link
                href={`/blog/${'slug'}`}
                className="text-gray-900 dark:text-gray-100"
              >
                {title}
              </Link>
            </h3>
            <div className="flex flex-wrap">
              {/* {tags.map((tag) => (
                          <Tag key={tag} text={tag} />
                        ))} */}
              <Tag text={'Test tag'} />
            </div>
          </div>
          <div className="prose text-gray-500 max-w-none dark:text-gray-400">
            {content}
          </div>
        </div>
      </article>
    </li>
  )
}

const Tag = ({ text }: { text: string }) => {
  return (
    <Link href={`/tags/${text}`}>
      <a className="mr-3 text-sm font-medium uppercase text-primary-500 hover:text-primary-600 dark:hover:text-primary-400">
        {text.split(' ').join('-')}
      </a>
    </Link>
  )
}

export default Posts
