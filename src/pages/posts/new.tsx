import type { NextPage } from 'next'
import Head from 'next/head'
import { trpc } from '../../utils/trpc'
import { useRouter } from 'next/router'
import { useForm } from 'react-hook-form'
import { CreatePostSchema } from '../../schema/posts.schema'
import { MutableRefObject, useRef } from 'react'

const NewPost: NextPage = () => {
  const router = useRouter()
  const { mutate, error } = trpc.useMutation(['posts.createPost'])
  const { handleSubmit, register } = useForm<CreatePostSchema>()

  const onSubmit = (values: CreatePostSchema) => {
    mutate(values)
  }

  return (
    <>
      <Head>
        <title>De.Bug Tech Blog</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <!-- Navbar --> */}
      <nav className="relative w-screen h-40 bg-primary_blue">
        <div className="flex items-center justify-between w-screen h-20 px-8">
          <div className="text-2xl font-semibold text-center text-white">
            De.bug Blog
          </div>
          <div className="text-2xl font-semibold text-center text-white">
            Menu
          </div>
        </div>
      </nav>

      <div className="flex flex-col w-screen h-screen bg-white">
        <div className="mx-8">
          <h3 className="font-extrabold text-1xl text-primary_blue">
            New Post
          </h3>
        </div>
        <div className="container justify-center mx-auto">
          <form onSubmit={handleSubmit(onSubmit)}>
            <div className="w-full mb-4 border border-gray-200 rounded-lg bg-gray-50 dark:border-gray-600 dark:bg-gray-700">
              <input
                type="text"
                placeholder="Title"
                {...register('title')}
                className="w-3/5 p-2 border-t-2 border-gray-500 border-x-2"
              />
              <div className="flex items-center justify-between px-3 py-2 border-b dark:border-gray-600">
                <div className="flex flex-wrap items-center divide-gray-200 dark:divide-gray-600 sm:divide-x">
                  <div className="flex items-center space-x-1 sm:pr-4"></div>
                </div>
                <div className="h-6"></div>
              </div>
              <div className="px-4 py-2 bg-white rounded-b-lg dark:bg-gray-800">
                <label className="sr-only" form="editor">
                  Publish post
                </label>
                <textarea
                  rows={8}
                  id="editor"
                  className="block w-full px-0 text-sm text-gray-800 bg-white border-0 focus:ring-0 dark:bg-gray-800 dark:text-white dark:placeholder-gray-400"
                  placeholder="Write an article..."
                  required
                  {...register('content')}
                ></textarea>
              </div>
            </div>
            <button
              type="submit"
              className="inline-flex items-center rounded-lg bg-blue-700 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-blue-800 focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-900"
            >
              Publish post
            </button>
          </form>
        </div>
      </div>
    </>
  )
}

export default NewPost

interface InputProps {
  ref: MutableRefObject<{}>
}

// const InputArea: React.FC<InputProps> = ({ ref }) => {
//   return (
//     <form>
//       <div className="w-full mb-4 border border-gray-200 rounded-lg bg-gray-50 dark:border-gray-600 dark:bg-gray-700">
//         <input
//           type="text"
//           placeholder="Title"
//           // {...register('title')}
//           className="w-3/5 p-2 border-t-2 border-gray-500 border-x-2"
//         />
//         <div className="flex items-center justify-between px-3 py-2 border-b dark:border-gray-600">
//           <div className="flex flex-wrap items-center divide-gray-200 dark:divide-gray-600 sm:divide-x">
//             <div className="flex items-center space-x-1 sm:pr-4"></div>
//           </div>
//           <div className="h-6"></div>
//         </div>
//         <div className="px-4 py-2 bg-white rounded-b-lg dark:bg-gray-800">
//           <label className="sr-only" form="editor">
//             Publish post
//           </label>
//           <textarea
//             rows={8}
//             id="editor"
//             className="block w-full px-0 text-sm text-gray-800 bg-white border-0 focus:ring-0 dark:bg-gray-800 dark:text-white dark:placeholder-gray-400"
//             placeholder="Write an article..."
//             required
//             // {...ref('content')}
//           ></textarea>
//         </div>
//       </div>
//       <button
//         type="submit"
//         className="inline-flex items-center rounded-lg bg-blue-700 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-blue-800 focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-900"
//       >
//         Publish post
//       </button>
//     </form>
//   )
// }
